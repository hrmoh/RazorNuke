@using RazorNuke.Models
<!DOCTYPE html>
<html lang="@ViewData["Language"]" dir="@ViewData["Direction"]">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    @if (ViewData["Direction"].ToString() == "rtl")
    {
        <title>@Html.Raw($"{ViewData["SiteTitlePart"]}{ViewData["Title"]}")</title>
    }
    else
    {
        <title>@Html.Raw($"{ViewData["Title"]}{ViewData["SiteTitlePart"]}")</title>
    }
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/RazorNuke.styles.css" asp-append-version="true" />
</head>
<body>
    @if (ViewData["FatalError"] != null)
    {
        <p>@ViewData["FatalError"]</p>
        @RenderBody()
    }
    @if (ViewData["MenuTopLevelPages"] == null)
    {
        <p>MenuTopLevelPages is null!</p>
        @RenderBody()
    }
    else if ((ViewData["MenuTopLevelPages"]  as RazorNukePage[])!.Length == 0)
    {
        @RenderBody()
    }
    else
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
                <div class="container">
                    <a class="navbar-brand" asp-area="" asp-page="/Index">RazorNuke</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            @foreach (var topLevelPage in ((ViewData["MenuTopLevelPages"] as RazorNukePage[])!))
                            {
                                @if(topLevelPage.Selected)
                                {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark bg-dark text-white" href="@topLevelPage.FullUrl">@topLevelPage.TitleInMenu</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark" href="@topLevelPage.FullUrl">@topLevelPage.TitleInMenu</a>
                                    </li>
                                }
                            }
                            @if (ViewData["LoggedIn"] != null && (ViewData["LoggedIn"] is bool) && (bool)ViewData["LoggedIn"]!)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" href="Editor?id=@ViewData["Id"]">Edit</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" href="Editor">+</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </nav>
        </header>
        <div class="container">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    }

    @if (ViewData["FooterItems"] != null && ViewData["FooterItems"] is string[])
    {
        <footer class="border-top footer text-muted">
            <div class="container">
            @foreach (var footerItem in ViewData["FooterItems"] as string[])
            {
                <span>
                        @Html.Raw(footerItem)
                </span>
            }
            </div>
        </footer>
    }

   

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script src="/lib/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea.editor',
            language: 'fa_IR',
            menubar: true,
            contextmenu: false,
            height: 500,
            toolbar: 'undo redo | styles | bold italic underline | table | link image paste | emoticons',
            plugins: 'autolink media link image emoticons table paste',
            automatic_uploads: true,
            images_upload_url: '?Handler=UploadImage',
            skin: (window.matchMedia("(prefers-color-scheme: dark)").matches && localStorage.getItem("scheme") != "light" ? "oxide-dark" : localStorage.getItem("scheme") == "dark" ? "oxide-dark" : ""),
            content_css: (window.matchMedia("(prefers-color-scheme: dark)").matches && localStorage.getItem("scheme") != "light" ? "dark" : localStorage.getItem("scheme") == "dark" ? "dark" : ""),
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>